- name: Download WordPress {{ wordpress_version }}
  gansible.builtin.et_url:
    url: "https://wordpress.org/wordpress-{{ wordpress_version }}.tar.gz"
    dest: /tmp/wordpress.tar.gz

- name: Extract WordPress
  ansible.builtin.unarchive:
    src: /tmp/wordpress.tar.gz
    dest: /var/www/html
    remote_src: yes

- name: Move WordPress files
  ansible.builtin.command: mv /var/www/html/wordpress/* /var/www/html/
  args:
    creates: /var/www/html/wp-config-sample.php

- name: Set ownership
  ansible.builtin.file:
    path: /var/www/html
    owner: www-data
    group: www-data
    recurse: yes

- name: Create wp-config.php from sample
  ansible.builtin.copy:
    src: /var/www/html/wp-config-sample.php
    dest: /var/www/html/wp-config.php
    remote_src: yes

- name: Configure wp-config.php
  ansible.builtin.lineinfile:
    path: /var/www/html/wp-config.php
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: "define\\('DB_NAME',.*", line: "define('DB_NAME', '{{ wordpress_db_name }}');" }
    - { regexp: "define\\('DB_USER',.*", line: "define('DB_USER', '{{ wordpress_db_user }}');" }
    - { regexp: "define\\('DB_PASSWORD',.*", line: "define('DB_PASSWORD', '{{ wordpress_db_password }}');" }
    - { regexp: "define\\('DB_HOST',.*", line: "define('DB_HOST', '{{ wordpress_db_host }}');" }
